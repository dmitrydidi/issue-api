extend type Mutation {
    issue: IssueMutations!
}
extend type Query {
    getIssues: IssuesResponse!
}
input IssueCreateInput {
    title: String!
    description: String!
}

input IssueDeleteInput  {
    id: String!
}

input IssueUpdateInput {
    id: String!
    title: String
    description: String
    state: EState
}

type IssueDeleteResponse {
   ok: Boolean
}

type IssueResponse {
    ok: Boolean
    issue: Issue
}

type IssuesResponse {
    data: [Issue]
}

type IssueMutations {
    issueCreate(input: IssueCreateInput!): IssueResponse
    issueUpdate(input: IssueUpdateInput!): IssueResponse
    issueDelete(input: IssueDeleteInput!): IssueDeleteResponse
}

type Issue {
    id: ID!
    title: String!
    description: String!
    state: EState
    createdAt: DateString
}
